import { render } from "./render";
import { HomePage } from "../pages/homePage/HomePage";
import { LoginPage } from "../pages/login/LoginPage";
import { RegistrationPage } from "../pages/registration/RegistrationPage";
import { ProfilePage } from "../pages/profile/ProfilePage";
import { ErrorPage } from "../pages/errorsPage/ErrorPage";

export interface Route {
  path: string;
  component: any;
  props?: any;
}

export class Router {
  private routes: Route[] = [];
  // private currentRoute: Route | null = null;

  constructor() {
    this.initRoutes();
    this.initEventListeners();
  }

  private initRoutes() {
    this.routes = [
      {
        path: "/",
        component: HomePage,
        props: {
          title: "NEON-CHAT v3.1.2",
          subtitle: "–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ö–ò–ë–ï–†–ü–†–û–°–¢–†–ê–ù–°–¢–í–û",
        },
      },
      {
        path: "/home",
        component: HomePage,
        props: {
          title: "NEON-CHAT v3.1.2",
          subtitle: "–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ö–ò–ë–ï–†–ü–†–û–°–¢–†–ê–ù–°–¢–í–û",
        },
      },
      {
        path: "/login",
        component: LoginPage,
        props: {
          title: "NEON-CHAT v3.1.2",
          subtitle: "–ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –í –°–ò–°–¢–ï–ú–ï",
        },
      },
      {
        path: "/registration",
        component: RegistrationPage,
        props: {
          title: "NEON-CHAT v3.1.2",
          subtitle: "–°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê",
        },
      },
      {
        path: "/profile",
        component: ProfilePage,
        props: {
          title: "–ü–†–û–§–ò–õ–¨",
          user: {
            avatar: "/assets/avatar-default.jpg",
            email: "user@neonmail.io",
            login: "neon_user",
            firstName: "–ê–ª–µ–∫—Å–µ–π",
            lastName: "–ò–≤–∞–Ω–æ–≤",
            displayName: "NEON_WARRIOR",
            phone: "+79001234567",
          },
        },
      },
      {
        path: "/chat",
        component: null, // –ë—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        props: {},
      },
      {
        path: "/404",
        component: ErrorPage,
        props: {
          errorCode: "404",
          title: "–û–®–ò–ë–ö–ê: –ö–û–¢ –ù–ê–°–¢–†–û–ô–ö–ò",
          message: "–°–µ—Ä–≤–µ—Ä —Å—ä–µ–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ë—É–∫–≤–∞–ª—å–Ω–æ.",
          terminalLines: [
            "> ERROR: –ü—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
            "> WARNING: –ö–æ—Ç-—Ö–∞–∫–µ—Ä –∑–∞–º–µ—á–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ",
            "> TIP: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –∫–æ—Ç–∞",
          ],
        },
      },
      {
        path: "/500",
        component: ErrorPage,
        props: {
          errorCode: "500",
          title: "–°–ï–†–í–ï–† –£–ü–ê–õ",
          message: "–ù–∞—à–∏ –∏–Ω–∂–µ–Ω–µ—Ä—ã —É–∂–µ –±–µ–≥—É—Ç —Å –∫–æ—Ñ–µ –∏ –ø–∞—è–ª—å–Ω–∏–∫–∞–º–∏.",
          terminalLines: [
            "> CRITICAL ERROR: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç",
            "> LAST ACTION: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ—Ñ–µ",
            "> STATUS: –ò–Ω–∂–µ–Ω–µ—Ä—ã –≤ –ø—É—Ç–∏",
          ],
        },
      },
    ];
  }

  private initEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º
    document.addEventListener("click", (e) => {
      const target = e.target as HTMLElement;
      const link = target.closest("a");

      if (link && link.href && link.href.startsWith(window.location.origin)) {
        e.preventDefault();
        const path = new URL(link.href).pathname;
        this.navigate(path);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ (–∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥/–≤–ø–µ—Ä–µ–¥)
    window.addEventListener("popstate", () => {
      this.handleRoute(window.location.pathname);
    });
  }

  public navigate(path: string) {
    // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.history.pushState({}, "", path);
    this.handleRoute(path);
  }

  private async handleRoute(path: string) {
    console.log("üîç Navigating to:", path);

    // –ò—â–µ–º –º–∞—Ä—à—Ä—É—Ç
    let route = this.routes.find((r) => r.path === path);

    // –ï—Å–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ—Ç, –∏—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ
    if (!route) {
      route = this.routes.find((r) => path.startsWith(r.path));
    }

    // –ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 404
    if (!route) {
      route = this.routes.find((r) => r.path === "/404")!;
    }

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —á–∞—Ç–∞ (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç)
    if (path.includes("/chat")) {
      try {
        const { ChatPage } = await import("../pages/chat/ChatPage");
        const chatPage = new ChatPage();
        render("#app", chatPage);
        return;
      } catch (error) {
        console.error("Error importing ChatPage:", error);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 500
        route = this.routes.find((r) => r.path === "/500")!;
      }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    if (route && route.component) {
      const component = new route.component(route.props);
      render("#app", component);
      // this.currentRoute = route;
    }
  }

  public start() {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    this.handleRoute(window.location.pathname);
  }
}
